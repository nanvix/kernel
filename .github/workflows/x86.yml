# Copyright(c) 2011-2024 The Maintainers of Nanvix.
# Licensed under the MIT License.

name: x86

on: push

env:
  TARGET_BRANCH: ${{ github.ref_name }}

jobs:

  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
    - name: Setup
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.hostname }}
        username: ${{ secrets.username }}
        key: ${{ secrets.sshkey }}
        port: ${{ secrets.portnum }}
        envs: TARGET_BRANCH
        script: |
          cd microkernel
          git pull
          git checkout origin/${TARGET_BRANCH}
          rm -rf build
          git submodule update --init --recursive
          git submodule foreach --recursive git fetch
          git status
          ls build

  build:
    name: Build
    needs: setup
    runs-on: ubuntu-latest
    steps:
    - name: Build
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.hostname }}
        username: ${{ secrets.username }}
        key: ${{ secrets.sshkey }}
        port: ${{ secrets.portnum }}
        script: |
          cd microkernel
          make TOOLCHAIN_DIR=$HOME/toolchain TARGET=x86 all

  test:
    name: Test
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Test
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.hostname }}
        username: ${{ secrets.username }}
        key: ${{ secrets.sshkey }}
        port: ${{ secrets.portnum }}
        script: |
          cd microkernel
          make TOOLCHAIN_DIR=$HOME/toolchain TARGET=x86 run | tee output.txt
          echo "Magic String: $(cat output.txt | tail -n 1)"
          [ "$(cat output.txt | tail -n 1)" != "PANIC: Hello World!" ] && exit 1 || exit 0 ;

  cleanup:
    name: Cleanup
    needs: test
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Cleanup
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.hostname }}
        username: ${{ secrets.username }}
        key: ${{ secrets.sshkey }}
        port: ${{ secrets.portnum }}
        script: |
          cd microkernel
          git checkout --force dev
          git clean -fdx
          git remote prune origin
